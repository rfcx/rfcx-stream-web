.clearfix {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    *zoom: 1;
}

.border-radius(@border-radius) {
    -moz-border-radius: @border-radius;
    -webkit-border-radius: @border-radius;
    border-radius: @border-radius;
}

.box-sizing(@box-model) {
    -webkit-box-sizing: @box-model;
    -moz-box-sizing: @box-model;
    box-sizing: @box-model;
}

.box-shadow (@string) {
    -webkit-box-shadow: @string;
    -moz-box-shadow:    @string;
    box-shadow:         @string;
}

.transition (@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -ms-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}

.transition-multiple(@value1,@value2:X,...)
{
    @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;

    -webkit-transition: @value;
    -moz-transition: @value;
    -ms-transition: @value;
    -o-transition: @value;
    transition: @value;
}

.translate (@x, @y:0) {
    -webkit-transform: translate(@x, @y);
    -moz-transform:    translate(@x, @y);
    -ms-transform: 	   translate(@x, @y);
    -o-transform: 	   translate(@x, @y);
}

.translateY (@y) {
    -webkit-transform: translateY(@y);
    -moz-transform:    translateY(@y);
    -ms-transform: 	   translateY(@y);
    -o-transform: 	   translateY(@y);
}

.animation(@animation) {
    -webkit-animation: @animation;
    -moz-animation: @animation;
    -o-animation: @animation;
    animation: @animation;
}

.translate3d (@x, @y: 0, @z: 0) {
    -webkit-transform:   translate3d(@x, @y, @z);
    -moz-transform: 	 translate3d(@x, @y, @z);
    -ms-transform: 		 translate3d(@x, @y, @z);
    -o-transform: 		 translate3d(@x, @y, @z);
}

.placeholder(@rules) {
    &::-webkit-input-placeholder {
        @rules();
    }
    &:-moz-placeholder {
        @rules();
    }
    &::-moz-placeholder {
        @rules();
    }
    &:-ms-input-placeholder {
        @rules();
    }
}